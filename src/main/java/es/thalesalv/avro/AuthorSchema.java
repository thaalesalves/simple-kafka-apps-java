/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package es.thalesalv.avro;  
@SuppressWarnings("all")
/** This schema represents a book author */
@org.apache.avro.specific.AvroGenerated
public class AuthorSchema extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AuthorSchema\",\"namespace\":\"es.thalesalv.avro\",\"doc\":\"This schema represents a book author\",\"fields\":[{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"birthdate\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence firstName;
  @Deprecated public java.lang.CharSequence lastName;
  @Deprecated public java.lang.CharSequence birthdate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AuthorSchema() {}

  /**
   * All-args constructor.
   */
  public AuthorSchema(java.lang.CharSequence firstName, java.lang.CharSequence lastName, java.lang.CharSequence birthdate) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.birthdate = birthdate;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return firstName;
    case 1: return lastName;
    case 2: return birthdate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: firstName = (java.lang.CharSequence)value$; break;
    case 1: lastName = (java.lang.CharSequence)value$; break;
    case 2: birthdate = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'firstName' field.
   */
  public java.lang.CharSequence getFirstName() {
    return firstName;
  }

  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   */
  public java.lang.CharSequence getLastName() {
    return lastName;
  }

  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'birthdate' field.
   */
  public java.lang.CharSequence getBirthdate() {
    return birthdate;
  }

  /**
   * Sets the value of the 'birthdate' field.
   * @param value the value to set.
   */
  public void setBirthdate(java.lang.CharSequence value) {
    this.birthdate = value;
  }

  /** Creates a new AuthorSchema RecordBuilder */
  public static es.thalesalv.avro.AuthorSchema.Builder newBuilder() {
    return new es.thalesalv.avro.AuthorSchema.Builder();
  }
  
  /** Creates a new AuthorSchema RecordBuilder by copying an existing Builder */
  public static es.thalesalv.avro.AuthorSchema.Builder newBuilder(es.thalesalv.avro.AuthorSchema.Builder other) {
    return new es.thalesalv.avro.AuthorSchema.Builder(other);
  }
  
  /** Creates a new AuthorSchema RecordBuilder by copying an existing AuthorSchema instance */
  public static es.thalesalv.avro.AuthorSchema.Builder newBuilder(es.thalesalv.avro.AuthorSchema other) {
    return new es.thalesalv.avro.AuthorSchema.Builder(other);
  }
  
  /**
   * RecordBuilder for AuthorSchema instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AuthorSchema>
    implements org.apache.avro.data.RecordBuilder<AuthorSchema> {

    private java.lang.CharSequence firstName;
    private java.lang.CharSequence lastName;
    private java.lang.CharSequence birthdate;

    /** Creates a new Builder */
    private Builder() {
      super(es.thalesalv.avro.AuthorSchema.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(es.thalesalv.avro.AuthorSchema.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.firstName)) {
        this.firstName = data().deepCopy(fields()[0].schema(), other.firstName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastName)) {
        this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.birthdate)) {
        this.birthdate = data().deepCopy(fields()[2].schema(), other.birthdate);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AuthorSchema instance */
    private Builder(es.thalesalv.avro.AuthorSchema other) {
            super(es.thalesalv.avro.AuthorSchema.SCHEMA$);
      if (isValidValue(fields()[0], other.firstName)) {
        this.firstName = data().deepCopy(fields()[0].schema(), other.firstName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.lastName)) {
        this.lastName = data().deepCopy(fields()[1].schema(), other.lastName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.birthdate)) {
        this.birthdate = data().deepCopy(fields()[2].schema(), other.birthdate);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'firstName' field */
    public java.lang.CharSequence getFirstName() {
      return firstName;
    }
    
    /** Sets the value of the 'firstName' field */
    public es.thalesalv.avro.AuthorSchema.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.firstName = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'firstName' field has been set */
    public boolean hasFirstName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'firstName' field */
    public es.thalesalv.avro.AuthorSchema.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'lastName' field */
    public java.lang.CharSequence getLastName() {
      return lastName;
    }
    
    /** Sets the value of the 'lastName' field */
    public es.thalesalv.avro.AuthorSchema.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.lastName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'lastName' field has been set */
    public boolean hasLastName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'lastName' field */
    public es.thalesalv.avro.AuthorSchema.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'birthdate' field */
    public java.lang.CharSequence getBirthdate() {
      return birthdate;
    }
    
    /** Sets the value of the 'birthdate' field */
    public es.thalesalv.avro.AuthorSchema.Builder setBirthdate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.birthdate = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'birthdate' field has been set */
    public boolean hasBirthdate() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'birthdate' field */
    public es.thalesalv.avro.AuthorSchema.Builder clearBirthdate() {
      birthdate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public AuthorSchema build() {
      try {
        AuthorSchema record = new AuthorSchema();
        record.firstName = fieldSetFlags()[0] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.lastName = fieldSetFlags()[1] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.birthdate = fieldSetFlags()[2] ? this.birthdate : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
