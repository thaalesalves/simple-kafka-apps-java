/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package es.thalesalv.avro;  
@SuppressWarnings("all")
/** This schema represents an error */
@org.apache.avro.specific.AvroGenerated
public class ErrorSchema extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ErrorSchema\",\"namespace\":\"es.thalesalv.avro\",\"doc\":\"This schema represents an error\",\"fields\":[{\"name\":\"errorMessage\",\"type\":\"string\"},{\"name\":\"errorName\",\"type\":\"string\"},{\"name\":\"statusCode\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence errorMessage;
  @Deprecated public java.lang.CharSequence errorName;
  @Deprecated public int statusCode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ErrorSchema() {}

  /**
   * All-args constructor.
   */
  public ErrorSchema(java.lang.CharSequence errorMessage, java.lang.CharSequence errorName, java.lang.Integer statusCode) {
    this.errorMessage = errorMessage;
    this.errorName = errorName;
    this.statusCode = statusCode;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return errorMessage;
    case 1: return errorName;
    case 2: return statusCode;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: errorMessage = (java.lang.CharSequence)value$; break;
    case 1: errorName = (java.lang.CharSequence)value$; break;
    case 2: statusCode = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'errorMessage' field.
   */
  public java.lang.CharSequence getErrorMessage() {
    return errorMessage;
  }

  /**
   * Sets the value of the 'errorMessage' field.
   * @param value the value to set.
   */
  public void setErrorMessage(java.lang.CharSequence value) {
    this.errorMessage = value;
  }

  /**
   * Gets the value of the 'errorName' field.
   */
  public java.lang.CharSequence getErrorName() {
    return errorName;
  }

  /**
   * Sets the value of the 'errorName' field.
   * @param value the value to set.
   */
  public void setErrorName(java.lang.CharSequence value) {
    this.errorName = value;
  }

  /**
   * Gets the value of the 'statusCode' field.
   */
  public java.lang.Integer getStatusCode() {
    return statusCode;
  }

  /**
   * Sets the value of the 'statusCode' field.
   * @param value the value to set.
   */
  public void setStatusCode(java.lang.Integer value) {
    this.statusCode = value;
  }

  /** Creates a new ErrorSchema RecordBuilder */
  public static es.thalesalv.avro.ErrorSchema.Builder newBuilder() {
    return new es.thalesalv.avro.ErrorSchema.Builder();
  }
  
  /** Creates a new ErrorSchema RecordBuilder by copying an existing Builder */
  public static es.thalesalv.avro.ErrorSchema.Builder newBuilder(es.thalesalv.avro.ErrorSchema.Builder other) {
    return new es.thalesalv.avro.ErrorSchema.Builder(other);
  }
  
  /** Creates a new ErrorSchema RecordBuilder by copying an existing ErrorSchema instance */
  public static es.thalesalv.avro.ErrorSchema.Builder newBuilder(es.thalesalv.avro.ErrorSchema other) {
    return new es.thalesalv.avro.ErrorSchema.Builder(other);
  }
  
  /**
   * RecordBuilder for ErrorSchema instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ErrorSchema>
    implements org.apache.avro.data.RecordBuilder<ErrorSchema> {

    private java.lang.CharSequence errorMessage;
    private java.lang.CharSequence errorName;
    private int statusCode;

    /** Creates a new Builder */
    private Builder() {
      super(es.thalesalv.avro.ErrorSchema.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(es.thalesalv.avro.ErrorSchema.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.errorMessage)) {
        this.errorMessage = data().deepCopy(fields()[0].schema(), other.errorMessage);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.errorName)) {
        this.errorName = data().deepCopy(fields()[1].schema(), other.errorName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.statusCode)) {
        this.statusCode = data().deepCopy(fields()[2].schema(), other.statusCode);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ErrorSchema instance */
    private Builder(es.thalesalv.avro.ErrorSchema other) {
            super(es.thalesalv.avro.ErrorSchema.SCHEMA$);
      if (isValidValue(fields()[0], other.errorMessage)) {
        this.errorMessage = data().deepCopy(fields()[0].schema(), other.errorMessage);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.errorName)) {
        this.errorName = data().deepCopy(fields()[1].schema(), other.errorName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.statusCode)) {
        this.statusCode = data().deepCopy(fields()[2].schema(), other.statusCode);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'errorMessage' field */
    public java.lang.CharSequence getErrorMessage() {
      return errorMessage;
    }
    
    /** Sets the value of the 'errorMessage' field */
    public es.thalesalv.avro.ErrorSchema.Builder setErrorMessage(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.errorMessage = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'errorMessage' field has been set */
    public boolean hasErrorMessage() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'errorMessage' field */
    public es.thalesalv.avro.ErrorSchema.Builder clearErrorMessage() {
      errorMessage = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'errorName' field */
    public java.lang.CharSequence getErrorName() {
      return errorName;
    }
    
    /** Sets the value of the 'errorName' field */
    public es.thalesalv.avro.ErrorSchema.Builder setErrorName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.errorName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'errorName' field has been set */
    public boolean hasErrorName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'errorName' field */
    public es.thalesalv.avro.ErrorSchema.Builder clearErrorName() {
      errorName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'statusCode' field */
    public java.lang.Integer getStatusCode() {
      return statusCode;
    }
    
    /** Sets the value of the 'statusCode' field */
    public es.thalesalv.avro.ErrorSchema.Builder setStatusCode(int value) {
      validate(fields()[2], value);
      this.statusCode = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'statusCode' field has been set */
    public boolean hasStatusCode() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'statusCode' field */
    public es.thalesalv.avro.ErrorSchema.Builder clearStatusCode() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public ErrorSchema build() {
      try {
        ErrorSchema record = new ErrorSchema();
        record.errorMessage = fieldSetFlags()[0] ? this.errorMessage : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.errorName = fieldSetFlags()[1] ? this.errorName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.statusCode = fieldSetFlags()[2] ? this.statusCode : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
