/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package es.thalesalv.avro;  
@SuppressWarnings("all")
/** This schema represents a magazine */
@org.apache.avro.specific.AvroGenerated
public class MagazineSchema extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MagazineSchema\",\"namespace\":\"es.thalesalv.avro\",\"doc\":\"This schema represents a magazine\",\"fields\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"issue\",\"type\":\"string\"},{\"name\":\"publisher\",\"type\":{\"type\":\"record\",\"name\":\"PublisherSchema\",\"doc\":\"This schema represents a book publisher\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence title;
  @Deprecated public java.lang.CharSequence issue;
  @Deprecated public es.thalesalv.avro.PublisherSchema publisher;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public MagazineSchema() {}

  /**
   * All-args constructor.
   */
  public MagazineSchema(java.lang.CharSequence title, java.lang.CharSequence issue, es.thalesalv.avro.PublisherSchema publisher) {
    this.title = title;
    this.issue = issue;
    this.publisher = publisher;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return title;
    case 1: return issue;
    case 2: return publisher;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: title = (java.lang.CharSequence)value$; break;
    case 1: issue = (java.lang.CharSequence)value$; break;
    case 2: publisher = (es.thalesalv.avro.PublisherSchema)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'title' field.
   */
  public java.lang.CharSequence getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.CharSequence value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'issue' field.
   */
  public java.lang.CharSequence getIssue() {
    return issue;
  }

  /**
   * Sets the value of the 'issue' field.
   * @param value the value to set.
   */
  public void setIssue(java.lang.CharSequence value) {
    this.issue = value;
  }

  /**
   * Gets the value of the 'publisher' field.
   */
  public es.thalesalv.avro.PublisherSchema getPublisher() {
    return publisher;
  }

  /**
   * Sets the value of the 'publisher' field.
   * @param value the value to set.
   */
  public void setPublisher(es.thalesalv.avro.PublisherSchema value) {
    this.publisher = value;
  }

  /** Creates a new MagazineSchema RecordBuilder */
  public static es.thalesalv.avro.MagazineSchema.Builder newBuilder() {
    return new es.thalesalv.avro.MagazineSchema.Builder();
  }
  
  /** Creates a new MagazineSchema RecordBuilder by copying an existing Builder */
  public static es.thalesalv.avro.MagazineSchema.Builder newBuilder(es.thalesalv.avro.MagazineSchema.Builder other) {
    return new es.thalesalv.avro.MagazineSchema.Builder(other);
  }
  
  /** Creates a new MagazineSchema RecordBuilder by copying an existing MagazineSchema instance */
  public static es.thalesalv.avro.MagazineSchema.Builder newBuilder(es.thalesalv.avro.MagazineSchema other) {
    return new es.thalesalv.avro.MagazineSchema.Builder(other);
  }
  
  /**
   * RecordBuilder for MagazineSchema instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MagazineSchema>
    implements org.apache.avro.data.RecordBuilder<MagazineSchema> {

    private java.lang.CharSequence title;
    private java.lang.CharSequence issue;
    private es.thalesalv.avro.PublisherSchema publisher;

    /** Creates a new Builder */
    private Builder() {
      super(es.thalesalv.avro.MagazineSchema.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(es.thalesalv.avro.MagazineSchema.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.issue)) {
        this.issue = data().deepCopy(fields()[1].schema(), other.issue);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.publisher)) {
        this.publisher = data().deepCopy(fields()[2].schema(), other.publisher);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing MagazineSchema instance */
    private Builder(es.thalesalv.avro.MagazineSchema other) {
            super(es.thalesalv.avro.MagazineSchema.SCHEMA$);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.issue)) {
        this.issue = data().deepCopy(fields()[1].schema(), other.issue);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.publisher)) {
        this.publisher = data().deepCopy(fields()[2].schema(), other.publisher);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'title' field */
    public java.lang.CharSequence getTitle() {
      return title;
    }
    
    /** Sets the value of the 'title' field */
    public es.thalesalv.avro.MagazineSchema.Builder setTitle(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.title = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'title' field has been set */
    public boolean hasTitle() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'title' field */
    public es.thalesalv.avro.MagazineSchema.Builder clearTitle() {
      title = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'issue' field */
    public java.lang.CharSequence getIssue() {
      return issue;
    }
    
    /** Sets the value of the 'issue' field */
    public es.thalesalv.avro.MagazineSchema.Builder setIssue(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.issue = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'issue' field has been set */
    public boolean hasIssue() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'issue' field */
    public es.thalesalv.avro.MagazineSchema.Builder clearIssue() {
      issue = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'publisher' field */
    public es.thalesalv.avro.PublisherSchema getPublisher() {
      return publisher;
    }
    
    /** Sets the value of the 'publisher' field */
    public es.thalesalv.avro.MagazineSchema.Builder setPublisher(es.thalesalv.avro.PublisherSchema value) {
      validate(fields()[2], value);
      this.publisher = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'publisher' field has been set */
    public boolean hasPublisher() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'publisher' field */
    public es.thalesalv.avro.MagazineSchema.Builder clearPublisher() {
      publisher = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public MagazineSchema build() {
      try {
        MagazineSchema record = new MagazineSchema();
        record.title = fieldSetFlags()[0] ? this.title : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.issue = fieldSetFlags()[1] ? this.issue : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.publisher = fieldSetFlags()[2] ? this.publisher : (es.thalesalv.avro.PublisherSchema) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
