/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package es.thalesalv.avro;  
@SuppressWarnings("all")
/** This schema represents a book */
@org.apache.avro.specific.AvroGenerated
public class BookSchema extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BookSchema\",\"namespace\":\"es.thalesalv.avro\",\"doc\":\"This schema represents a book\",\"fields\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"releaseYear\",\"type\":\"int\"},{\"name\":\"genre\",\"type\":\"string\"},{\"name\":\"isbn\",\"type\":\"long\"},{\"name\":\"author\",\"type\":{\"type\":\"record\",\"name\":\"AuthorSchema\",\"doc\":\"This schema represents a book author\",\"fields\":[{\"name\":\"firstName\",\"type\":\"string\"},{\"name\":\"lastName\",\"type\":\"string\"},{\"name\":\"birthdate\",\"type\":\"string\"}]}},{\"name\":\"publisher\",\"type\":{\"type\":\"record\",\"name\":\"PublisherSchema\",\"doc\":\"This schema represents a book publisher\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence title;
  @Deprecated public int releaseYear;
  @Deprecated public java.lang.CharSequence genre;
  @Deprecated public long isbn;
  @Deprecated public es.thalesalv.avro.AuthorSchema author;
  @Deprecated public es.thalesalv.avro.PublisherSchema publisher;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public BookSchema() {}

  /**
   * All-args constructor.
   */
  public BookSchema(java.lang.CharSequence title, java.lang.Integer releaseYear, java.lang.CharSequence genre, java.lang.Long isbn, es.thalesalv.avro.AuthorSchema author, es.thalesalv.avro.PublisherSchema publisher) {
    this.title = title;
    this.releaseYear = releaseYear;
    this.genre = genre;
    this.isbn = isbn;
    this.author = author;
    this.publisher = publisher;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return title;
    case 1: return releaseYear;
    case 2: return genre;
    case 3: return isbn;
    case 4: return author;
    case 5: return publisher;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: title = (java.lang.CharSequence)value$; break;
    case 1: releaseYear = (java.lang.Integer)value$; break;
    case 2: genre = (java.lang.CharSequence)value$; break;
    case 3: isbn = (java.lang.Long)value$; break;
    case 4: author = (es.thalesalv.avro.AuthorSchema)value$; break;
    case 5: publisher = (es.thalesalv.avro.PublisherSchema)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'title' field.
   */
  public java.lang.CharSequence getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.CharSequence value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'releaseYear' field.
   */
  public java.lang.Integer getReleaseYear() {
    return releaseYear;
  }

  /**
   * Sets the value of the 'releaseYear' field.
   * @param value the value to set.
   */
  public void setReleaseYear(java.lang.Integer value) {
    this.releaseYear = value;
  }

  /**
   * Gets the value of the 'genre' field.
   */
  public java.lang.CharSequence getGenre() {
    return genre;
  }

  /**
   * Sets the value of the 'genre' field.
   * @param value the value to set.
   */
  public void setGenre(java.lang.CharSequence value) {
    this.genre = value;
  }

  /**
   * Gets the value of the 'isbn' field.
   */
  public java.lang.Long getIsbn() {
    return isbn;
  }

  /**
   * Sets the value of the 'isbn' field.
   * @param value the value to set.
   */
  public void setIsbn(java.lang.Long value) {
    this.isbn = value;
  }

  /**
   * Gets the value of the 'author' field.
   */
  public es.thalesalv.avro.AuthorSchema getAuthor() {
    return author;
  }

  /**
   * Sets the value of the 'author' field.
   * @param value the value to set.
   */
  public void setAuthor(es.thalesalv.avro.AuthorSchema value) {
    this.author = value;
  }

  /**
   * Gets the value of the 'publisher' field.
   */
  public es.thalesalv.avro.PublisherSchema getPublisher() {
    return publisher;
  }

  /**
   * Sets the value of the 'publisher' field.
   * @param value the value to set.
   */
  public void setPublisher(es.thalesalv.avro.PublisherSchema value) {
    this.publisher = value;
  }

  /** Creates a new BookSchema RecordBuilder */
  public static es.thalesalv.avro.BookSchema.Builder newBuilder() {
    return new es.thalesalv.avro.BookSchema.Builder();
  }
  
  /** Creates a new BookSchema RecordBuilder by copying an existing Builder */
  public static es.thalesalv.avro.BookSchema.Builder newBuilder(es.thalesalv.avro.BookSchema.Builder other) {
    return new es.thalesalv.avro.BookSchema.Builder(other);
  }
  
  /** Creates a new BookSchema RecordBuilder by copying an existing BookSchema instance */
  public static es.thalesalv.avro.BookSchema.Builder newBuilder(es.thalesalv.avro.BookSchema other) {
    return new es.thalesalv.avro.BookSchema.Builder(other);
  }
  
  /**
   * RecordBuilder for BookSchema instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BookSchema>
    implements org.apache.avro.data.RecordBuilder<BookSchema> {

    private java.lang.CharSequence title;
    private int releaseYear;
    private java.lang.CharSequence genre;
    private long isbn;
    private es.thalesalv.avro.AuthorSchema author;
    private es.thalesalv.avro.PublisherSchema publisher;

    /** Creates a new Builder */
    private Builder() {
      super(es.thalesalv.avro.BookSchema.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(es.thalesalv.avro.BookSchema.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.releaseYear)) {
        this.releaseYear = data().deepCopy(fields()[1].schema(), other.releaseYear);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.genre)) {
        this.genre = data().deepCopy(fields()[2].schema(), other.genre);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isbn)) {
        this.isbn = data().deepCopy(fields()[3].schema(), other.isbn);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.author)) {
        this.author = data().deepCopy(fields()[4].schema(), other.author);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.publisher)) {
        this.publisher = data().deepCopy(fields()[5].schema(), other.publisher);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing BookSchema instance */
    private Builder(es.thalesalv.avro.BookSchema other) {
            super(es.thalesalv.avro.BookSchema.SCHEMA$);
      if (isValidValue(fields()[0], other.title)) {
        this.title = data().deepCopy(fields()[0].schema(), other.title);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.releaseYear)) {
        this.releaseYear = data().deepCopy(fields()[1].schema(), other.releaseYear);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.genre)) {
        this.genre = data().deepCopy(fields()[2].schema(), other.genre);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isbn)) {
        this.isbn = data().deepCopy(fields()[3].schema(), other.isbn);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.author)) {
        this.author = data().deepCopy(fields()[4].schema(), other.author);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.publisher)) {
        this.publisher = data().deepCopy(fields()[5].schema(), other.publisher);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'title' field */
    public java.lang.CharSequence getTitle() {
      return title;
    }
    
    /** Sets the value of the 'title' field */
    public es.thalesalv.avro.BookSchema.Builder setTitle(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.title = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'title' field has been set */
    public boolean hasTitle() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'title' field */
    public es.thalesalv.avro.BookSchema.Builder clearTitle() {
      title = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'releaseYear' field */
    public java.lang.Integer getReleaseYear() {
      return releaseYear;
    }
    
    /** Sets the value of the 'releaseYear' field */
    public es.thalesalv.avro.BookSchema.Builder setReleaseYear(int value) {
      validate(fields()[1], value);
      this.releaseYear = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'releaseYear' field has been set */
    public boolean hasReleaseYear() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'releaseYear' field */
    public es.thalesalv.avro.BookSchema.Builder clearReleaseYear() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'genre' field */
    public java.lang.CharSequence getGenre() {
      return genre;
    }
    
    /** Sets the value of the 'genre' field */
    public es.thalesalv.avro.BookSchema.Builder setGenre(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.genre = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'genre' field has been set */
    public boolean hasGenre() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'genre' field */
    public es.thalesalv.avro.BookSchema.Builder clearGenre() {
      genre = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'isbn' field */
    public java.lang.Long getIsbn() {
      return isbn;
    }
    
    /** Sets the value of the 'isbn' field */
    public es.thalesalv.avro.BookSchema.Builder setIsbn(long value) {
      validate(fields()[3], value);
      this.isbn = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'isbn' field has been set */
    public boolean hasIsbn() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'isbn' field */
    public es.thalesalv.avro.BookSchema.Builder clearIsbn() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'author' field */
    public es.thalesalv.avro.AuthorSchema getAuthor() {
      return author;
    }
    
    /** Sets the value of the 'author' field */
    public es.thalesalv.avro.BookSchema.Builder setAuthor(es.thalesalv.avro.AuthorSchema value) {
      validate(fields()[4], value);
      this.author = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'author' field has been set */
    public boolean hasAuthor() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'author' field */
    public es.thalesalv.avro.BookSchema.Builder clearAuthor() {
      author = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'publisher' field */
    public es.thalesalv.avro.PublisherSchema getPublisher() {
      return publisher;
    }
    
    /** Sets the value of the 'publisher' field */
    public es.thalesalv.avro.BookSchema.Builder setPublisher(es.thalesalv.avro.PublisherSchema value) {
      validate(fields()[5], value);
      this.publisher = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'publisher' field has been set */
    public boolean hasPublisher() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'publisher' field */
    public es.thalesalv.avro.BookSchema.Builder clearPublisher() {
      publisher = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public BookSchema build() {
      try {
        BookSchema record = new BookSchema();
        record.title = fieldSetFlags()[0] ? this.title : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.releaseYear = fieldSetFlags()[1] ? this.releaseYear : (java.lang.Integer) defaultValue(fields()[1]);
        record.genre = fieldSetFlags()[2] ? this.genre : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.isbn = fieldSetFlags()[3] ? this.isbn : (java.lang.Long) defaultValue(fields()[3]);
        record.author = fieldSetFlags()[4] ? this.author : (es.thalesalv.avro.AuthorSchema) defaultValue(fields()[4]);
        record.publisher = fieldSetFlags()[5] ? this.publisher : (es.thalesalv.avro.PublisherSchema) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
